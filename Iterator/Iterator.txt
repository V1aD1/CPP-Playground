Iterator Pattern

An object that facilitates the traversal of a data structure. It keeps a reference of the current element, and knows how to move to a different element. 

It can be used implicitly, like in a range-based for, or in coroutines. 

An object can be iterated if it defines a begin()/end() pair.
Typically requires != and ++ operators to be defined.

++ is called sporadically, so cannot be recursive (therefore can't be used to traverse trees) but... coroutines allow recursion through generator yielding functions. 
